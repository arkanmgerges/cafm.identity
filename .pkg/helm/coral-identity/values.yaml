# Default values for cafm-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: docker-registry.dev.arkan.cloud/cafm/cafm-identity
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v1"

imagePullSecrets: [{"name":"docker-registry"}]
nameOverride: ""
fullnameOverride: ""

logging: DEBUG
secretToken: 1234 # Set this from command line
artifact:
  name: "{{ template \"cafm-api.name\" $ }}-artifact"
  basePath: /artifact
  relativePath: cafm.identity/bundle

env:
  - name: CAFM_IDENTITY_LOGGING
    valueFrom:
      configMapKeyRef:
        name: cafm-identity
        key: CAFM_IDENTITY_LOGGING
  - name: SECRET_TOKEN
    valueFrom:
      configMapKeyRef:
        name: cafm-identity
        key: SECRET_TOKEN
  - name: ARTIFACT_FOLDER_PATH
    valueFrom:
      configMapKeyRef:
        name: cafm-identity
        key: ARTIFACT_PATH
nfs:
  path: /exports
  server: arkan.cloud

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPortName: cafm-identity

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
